 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head || !head->next || !head->next->next){
            return NULL;
        }
        ListNode *fast = head;
        ListNode *slow = head;
        while(fast != NULL && fast->next!= NULL){
            fast = fast->next;
            if(fast->next!=NULL){
                fast=fast->next;
            }
            slow = slow->next;
            if(fast == slow)
                break;
        }
        if(slow!=fast){
            return NULL;
        }
        slow=head;
        while(slow!=fast){
            fast=fast->next;
            slow=slow->next;
        }
        return slow;
    }
};
